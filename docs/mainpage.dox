/**
\mainpage

CIMUnit is a multi-threaded testing framework.  It assists developers in
testing multi-threaded applications by enforcing developer specified schedules.

CIMUnit uses the concepts of events and ensures that events are fired in a
specific sequence.  Developers insert into their test code statements to
define the allowable sequence of events, which is also knows as a schedule, and
statements indicating that a specific event has fired.

The CIMUnit framework detects when events fire and places threads to sleep or
wakes them up to ensure a specific event sequence is realized.  In its current
state, if it isn't possible for a specific sequence to be realized, a deadlock
may result and the test suite will hang.

\section toc Table of Contents
- \ref License
- \ref build
- \ref manual
- \ref comparison
- \ref test_example.c "test_example.c - Example CIMUnit test"

CIMUnit was written by Dale Frampton and Kurtis Nusbaum based on IMUnit by
Vilas Jagannath, et al.  IMUnit can be found at
http://mir.cs.illinois.edu/imunit/

\page License CIMUnit License

\verbinclude LICENSE

\example test_example.c
This example shows a walk through of how CIMUnit operates.

*/

